{"version":3,"names":["getTaskNames","appName","commands","map","command","toPascalCase","value","toUpperCase","slice","runOnAllDevices","args","cmd","adbPath","androidProject","devices","adb","getDevices","length","logger","info","result","tryLaunchEmulator","success","error","chalk","dim","warn","tasks","mode","gradleArgs","extraParams","port","push","activeArchOnly","architectures","device","getCPU","filter","arch","index","array","indexOf","join","debug","execa","stdio","cwd","sourceDir","createInstallError","undefined","forEach","tryRunAdbReverse","tryLaunchAppOnDevice","packageName","stderr","toString","docs","message","underline","log","includes","bold","CLIError"],"sources":["../../../src/commands/runAndroid/runOnAllDevices.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport chalk from 'chalk';\nimport execa from 'execa';\nimport {Config} from '@react-native-community/cli-types';\nimport {logger, CLIError} from '@react-native-community/cli-tools';\nimport adb from './adb';\nimport tryRunAdbReverse from './tryRunAdbReverse';\nimport tryLaunchAppOnDevice from './tryLaunchAppOnDevice';\nimport tryLaunchEmulator from './tryLaunchEmulator';\nimport {Flags} from '.';\n\nexport function getTaskNames(\n  appName: string,\n  commands: Array<string>,\n): Array<string> {\n  return appName\n    ? commands.map((command) => `${appName}:${command}`)\n    : commands;\n}\n\nexport function toPascalCase(value: string) {\n  return value !== '' ? value[0].toUpperCase() + value.slice(1) : value;\n}\n\ntype AndroidProject = NonNullable<Config['project']['android']>;\n\nasync function runOnAllDevices(\n  args: Flags,\n  cmd: string,\n  adbPath: string,\n  androidProject: AndroidProject,\n) {\n  let devices = adb.getDevices(adbPath);\n  if (devices.length === 0) {\n    logger.info('Launching emulator...');\n    const result = await tryLaunchEmulator(adbPath);\n    if (result.success) {\n      logger.info('Successfully launched emulator.');\n      devices = adb.getDevices(adbPath);\n    } else {\n      logger.error(\n        `Failed to launch emulator. Reason: ${chalk.dim(result.error || '')}.`,\n      );\n      logger.warn(\n        'Please launch an emulator manually or connect a device. Otherwise app may fail to launch.',\n      );\n    }\n  }\n\n  try {\n    const tasks = args.tasks || [\n      'install' + toPascalCase(args.mode ?? 'debug'),\n    ];\n    let gradleArgs = getTaskNames(androidProject.appName, tasks);\n\n    if (args.extraParams) {\n      gradleArgs = [...gradleArgs, ...args.extraParams];\n    }\n\n    if (args.port != null) {\n      gradleArgs.push('-PreactNativeDevServerPort=' + args.port);\n    }\n\n    if (args.activeArchOnly) {\n      const architectures = devices\n        .map((device) => {\n          return adb.getCPU(adbPath, device);\n        })\n        .filter(\n          (arch, index, array) => arch != null && array.indexOf(arch) === index,\n        );\n      if (architectures.length > 0) {\n        logger.info(`Detected architectures ${architectures.join(', ')}`);\n        // `reactNativeDebugArchitectures`Â was renamed to `reactNativeArchitectures` in 0.68.\n        // Can be removed when 0.67 no longer needs to be supported.\n        gradleArgs.push(\n          '-PreactNativeDebugArchitectures=' + architectures.join(','),\n        );\n        gradleArgs.push(\n          '-PreactNativeArchitectures=' + architectures.join(','),\n        );\n      }\n    }\n\n    logger.info('Installing the app...');\n    logger.debug(\n      `Running command \"cd android && ${cmd} ${gradleArgs.join(' ')}\"`,\n    );\n\n    await execa(cmd, gradleArgs, {\n      stdio: ['inherit', 'inherit', 'pipe'],\n      cwd: androidProject.sourceDir,\n    });\n  } catch (error) {\n    throw createInstallError(error);\n  }\n\n  (devices.length > 0 ? devices : [undefined]).forEach(\n    (device: string | void) => {\n      tryRunAdbReverse(args.port, device);\n      tryLaunchAppOnDevice(device, androidProject.packageName, adbPath, args);\n    },\n  );\n}\n\nfunction createInstallError(error: Error & {stderr: string}) {\n  const stderr = (error.stderr || '').toString();\n  const docs = 'https://reactnative.dev/docs/environment-setup';\n  let message = `Make sure you have the Android development environment set up: ${chalk.underline.dim(\n    docs,\n  )}`;\n\n  // Pass the error message from the command to stdout because we pipe it to\n  // parent process so it's not visible\n  logger.log(stderr);\n\n  // Handle some common failures and make the errors more helpful\n  if (stderr.includes('No connected devices')) {\n    message =\n      'Make sure you have an Android emulator running or a device connected';\n  } else if (\n    stderr.includes('licences have not been accepted') ||\n    stderr.includes('accept the SDK license')\n  ) {\n    message = `Please accept all necessary Android SDK licenses using Android SDK Manager: \"${chalk.bold(\n      '$ANDROID_HOME/tools/bin/sdkmanager --licenses',\n    )}\"`;\n  }\n\n  return new CLIError(`Failed to install the app. ${message}.`, error);\n}\n\nexport default runOnAllDevices;\n"],"mappings":"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"}